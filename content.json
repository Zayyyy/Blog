{"meta":{"title":"Ang. Z","subtitle":null,"description":"My hand is cold, but my heart is gold","author":"Ang. Z","url":"https://zayyyy.github.io/Blog"},"pages":[{"title":"Hello World","date":"2017-05-11T16:26:50.000Z","updated":"2017-05-11T16:26:50.000Z","comments":true,"path":"hello-world.html","permalink":"https://zayyyy.github.io/Blog/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"All Categories","date":"2017-05-11T16:10:56.000Z","updated":"2017-05-11T16:28:41.000Z","comments":false,"path":"categories/index.html","permalink":"https://zayyyy.github.io/Blog/categories/index.html","excerpt":"","text":""},{"title":"All Tags","date":"2017-05-11T16:13:29.000Z","updated":"2017-05-11T16:28:40.000Z","comments":false,"path":"tags/index.html","permalink":"https://zayyyy.github.io/Blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Computer Vision Project -- Insturct an exercise session","slug":"CV","date":"2017-05-29T17:35:28.000Z","updated":"2017-05-31T20:49:55.000Z","comments":true,"path":"2017/05/29/CV/","link":"","permalink":"https://zayyyy.github.io/Blog/2017/05/29/CV/","excerpt":"","text":"Week 1 Progress Webot part: We designed 6 postures but some are too complicated when setting the virtual robot. The adjustable range of angles in choregraphe is too small to achieve some postures, so we need to simplify our postures. Pose estimation: We followed the instruction of 2D articulated human pose estimation software. Luckily, the example of human pose estimation works well. However, when we want to detect upperbody or fullbody to get the bounding box of our dataset, there are some problems with the calvin upper-body detector. The provided voc-release file is too old without maintenance. In this case, we have to change our plan. Reference:pose estimation: http://groups.inf.ed.ac.uk/calvin/articulated_human_pose_estimation_code/body detector:http://groups.inf.ed.ac.uk/calvin/calvin_upperbody_detector/ Issues MATLAB can’t recognize the complier (Xcode 8.x) on Mac. 1234&gt;&gt; mex -setupError using mexNo supported compiler or SDK was found. For options, visithttp://www.mathworks.com/support/compilers/R2016a/maci64.html. Solution: The reason could be the sdk for your mac version isn’t linked to MATLAB. Edit the file: yourMatlabRoot/bin/maci64/mexopts/clang++_maci64.xml Edit the file: yourMatlabRoot/bin/maci64/mexopts/clang_maci64.xml Add following 2 sentences in &lt; ISYSROOT &gt; &lt; SYSROOT &gt; and &lt; SDKVER &gt; &lt; SDKVER &gt; 12&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt; So the code block will look like this: 123456789101112131415161718192021222324252627282930313233&lt;ISYSROOT&gt;&lt;and&gt;&lt;cmdReturns name=&quot;xcode-select -print-path&quot;/&gt;&lt;or&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.9.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.10.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.11.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt;&lt;/or&gt;&lt;/and&gt;&lt;/ISYSROOT&gt;&lt;SDKVER&gt;&lt;and&gt;&lt;and&gt;&lt;cmdReturns name=&quot;xcode-select -print-path&quot;/&gt;&lt;or&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.9.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.10.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.11.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt;&lt;/or&gt;&lt;/and&gt;&lt;cmdReturns name=&quot;echo $$ | rev | cut -c1-10 | rev | egrep -oh &apos;[0-9]+\\.[0-9]+&apos;&quot; /&gt;&lt;/and&gt;&lt;/SDKVER&gt; Reference:https://cn.mathworks.com/matlabcentral/answers/246507-why-can-t-mex-find-a-supported-compiler-in-matlab-r2015b-after-i-upgraded-to-xcode-7-0/ Error message in Matlab when using voc-release file: Undefined function ‘resize’ for input arguments of type ‘double’. 12345678910111213Undefined function &apos;resize&apos; for input arguments of type &apos;double&apos;.Error in featpyramid (line 22)scaled = resize(im, 1/sc^(i-1));Error in detect (line 69)[feat, scales] = featpyramid(input, model.sbin, interval);Error in DetectStillImage (line 35)boxes = detect(tempimg, pffmodel,det_pars.ubfpff_thresh);Error in DetectAndEstimDir (line 26)detections = DetectStillImage(fullfile(img_dir,Files(idx).name),pffubfmodel_path,facemodel_path,det_pars,verbose); The definition of the function of resize in resize.cc is: 1mxArray *resize(const mxArray *mxsrc, const mxArray *mxscale) &#123;&#125; The input type is mxArrar, not double type. But changing it into double type dosen’t work. No solution now. Week 2 ProgressSince using MATLAB to extract posture data is infeasible, we decided to work on Kinect to get the skeleton data. We have looked up dozens of documentation and found that MacOS can be connected to Kinect. After fixing a lot of problems when installing the Kinect SDK on Mac, we successfully ran the Kinect. However, we found there is no way to call Pykinect library for programming except using Windows OS. The most ridiculous thing is that all of our group member don’t have Windows laptop. We had no choice but worked on the computer in the laboratory which needed the administrator’s account to install Kinect SDK and other python packages on VS 2013. Due to the above, We wasted lots of time and encountered many problems about pygame enviroment before we can start programming. Reference:http://blog.nelga.com/setup-microsoft-kinect-on-mac-os-x-10-9-mavericks/https://github.com/Microsoft/PTVS/wiki/PyKinect Issues Can’t access python environment correctly. Solution: Open solution explorer, set the python environment to the right path. We recommond to add virtual environment rather than the global environment. Can’t import pygame and other python package. Solution: Download the required packages. Open solution explorer. Right-click on the Python environment and select Install Python Package. Type the full path to the “Search PyPI and installed packages” box. Notice: the pip version need to be upgraded to the latest one, or the python package would fail to be installed. Week 3 Final resultDue to the limitation of devices for developing the project last 2 weeks, we finally borrowed a Windows laptop to code this week. In order to work effienctly, we divided our work into 2 parts, which are training model and matching postures. Training model: Training on our robot’s data. 26 attributes (26 flexible angles from choregraphe) Using SVM Performs very well Training on real data 11 attributes (8 posture angles and 3 orientations) Also very well Due to the need of large dataset, we use normal distrubution to generate 6000 simulation data (1000 data for each posture).","categories":[{"name":"Computer science","slug":"Computer-science","permalink":"https://zayyyy.github.io/Blog/categories/Computer-science/"}],"tags":[{"name":"Intelligent","slug":"Intelligent","permalink":"https://zayyyy.github.io/Blog/tags/Intelligent/"}]},{"title":"Computer Vision Project -- Insturct an exercise session","slug":"Intelligent-System","date":"2017-05-29T17:35:28.000Z","updated":"2017-05-31T21:01:48.000Z","comments":true,"path":"2017/05/29/Intelligent-System/","link":"","permalink":"https://zayyyy.github.io/Blog/2017/05/29/Intelligent-System/","excerpt":"","text":"Week 1 Progress Webot part: We designed 6 postures but some are too complicated when setting the virtual robot. The adjustable range of angles in choregraphe is too small to achieve some postures, so we need to simplify our postures. Pose estimation: We followed the instruction of 2D articulated human pose estimation software. Luckily, the example of human pose estimation works well. However, when we want to detect upperbody or fullbody to get the bounding box of our dataset, there are some problems with the calvin upper-body detector. The provided voc-release file is too old without maintenance. In this case, we have to change our plan. Reference:pose estimation: http://groups.inf.ed.ac.uk/calvin/articulated_human_pose_estimation_code/body detector:http://groups.inf.ed.ac.uk/calvin/calvin_upperbody_detector/ Issues MATLAB can’t recognize the complier (Xcode 8.x) on Mac. 1234&gt;&gt; mex -setupError using mexNo supported compiler or SDK was found. For options, visithttp://www.mathworks.com/support/compilers/R2016a/maci64.html. Solution: The reason could be the sdk for your mac version isn’t linked to MATLAB. Edit the file: yourMatlabRoot/bin/maci64/mexopts/clang++_maci64.xml Edit the file: yourMatlabRoot/bin/maci64/mexopts/clang_maci64.xml Add following 2 sentences in &lt; ISYSROOT &gt; &lt; SYSROOT &gt; and &lt; SDKVER &gt; &lt; SDKVER &gt; 12&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt; So the code block will look like this: 123456789101112131415161718192021222324252627282930313233&lt;ISYSROOT&gt;&lt;and&gt;&lt;cmdReturns name=&quot;xcode-select -print-path&quot;/&gt;&lt;or&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.9.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.10.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.11.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt;&lt;/or&gt;&lt;/and&gt;&lt;/ISYSROOT&gt;&lt;SDKVER&gt;&lt;and&gt;&lt;and&gt;&lt;cmdReturns name=&quot;xcode-select -print-path&quot;/&gt;&lt;or&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk&quot; /&gt;&lt;dirExists name=&quot;$$/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.9.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.10.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.11.sdk&quot; /&gt;&lt;cmdReturns name=&quot;find $$ -name MacOSX10.12.sdk&quot; /&gt;&lt;/or&gt;&lt;/and&gt;&lt;cmdReturns name=&quot;echo $$ | rev | cut -c1-10 | rev | egrep -oh &apos;[0-9]+\\.[0-9]+&apos;&quot; /&gt;&lt;/and&gt;&lt;/SDKVER&gt; Reference:https://cn.mathworks.com/matlabcentral/answers/246507-why-can-t-mex-find-a-supported-compiler-in-matlab-r2015b-after-i-upgraded-to-xcode-7-0/ Error message in Matlab when using voc-release file: Undefined function ‘resize’ for input arguments of type ‘double’. 12345678910111213Undefined function &apos;resize&apos; for input arguments of type &apos;double&apos;.Error in featpyramid (line 22)scaled = resize(im, 1/sc^(i-1));Error in detect (line 69)[feat, scales] = featpyramid(input, model.sbin, interval);Error in DetectStillImage (line 35)boxes = detect(tempimg, pffmodel,det_pars.ubfpff_thresh);Error in DetectAndEstimDir (line 26)detections = DetectStillImage(fullfile(img_dir,Files(idx).name),pffubfmodel_path,facemodel_path,det_pars,verbose); The definition of the function of resize in resize.cc is: 1mxArray *resize(const mxArray *mxsrc, const mxArray *mxscale) &#123;&#125; The input type is mxArrar, not double type. But changing it into double type dosen’t work. No solution now. Week 2 ProgressSince using MATLAB to extract posture data is infeasible, we decided to work on Kinect to get the skeleton data. We have looked up dozens of documentation and found that MacOS can be connected to Kinect. After fixing a lot of problems when installing the Kinect SDK on Mac, we successfully ran the Kinect. However, we found there is no way to call Pykinect library for programming except using Windows OS. The most ridiculous thing is that all of our group member don’t have Windows laptop. We had no choice but worked on the computer in the laboratory which needed the administrator’s account to install Kinect SDK and other python packages on VS 2013. Due to the above, We wasted lots of time and encountered many problems about pygame enviroment before we can start programming. Reference:http://blog.nelga.com/setup-microsoft-kinect-on-mac-os-x-10-9-mavericks/https://github.com/Microsoft/PTVS/wiki/PyKinect Issues Can’t access python environment correctly. Solution: Open solution explorer, set the python environment to the right path. We recommond to add virtual environment rather than the global environment. Can’t import pygame and other python package. Solution: Download the required packages. Open solution explorer. Right-click on the Python environment and select Install Python Package. Type the full path to the “Search PyPI and installed packages” box. Notice: the pip version need to be upgraded to the latest one, or the python package would fail to be installed. Week 3 Final resultDue to the limitation of devices for developing the project last 2 weeks, we finally borrowed a Windows laptop to code this week. In order to work effienctly, we divided our work into 2 parts, which are training model and matching postures. Training model: Training on our robot’s data. 26 attributes (26 flexible angles from choregraphe) Using SVM Performs very well Training on real data 11 attributes (8 posture angles and 3 orientations) Also very well Due to the need of large dataset, we use normal distrubution to generate 6000 simulation data (1000 data for each posture).","categories":[{"name":"Computer science","slug":"Computer-science","permalink":"https://zayyyy.github.io/Blog/categories/Computer-science/"}],"tags":[{"name":"Intelligent","slug":"Intelligent","permalink":"https://zayyyy.github.io/Blog/tags/Intelligent/"}]}]}